#!/bin/bash

set -euxo pipefail

INITRC_PATH=/var/www/html/owncloud/config/initrc
if [ -e "$INITRC_PATH" ]; then
    source "$INITRC_PATH"
fi

function main() {
    DB_PASSWORD=${DB_PASSWORD:-$(random_password)}
    ADMIN_PASSWORD=${ADMIN_PASSWORD:-$(random_password)}

    set_directory_permissions
    write_initrc
    postgresql_initdb
    wait_for_postgresql
    create_owncloud_db
    create_autoconfig
    create_config
    install_owncloud
}

function postgresql_initdb() {
    PGDATA=/var/lib/pgsql/data
    if [ ! -e "$PGDATA" ]; then
        # use mv to make the init atomic and prevent postgresql from
        # starting when initdb is still in progress
        su - postgres -c "initdb -D $PGDATA.init"
        cat > $PGDATA.init/pg_hba.conf <<EOF
# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   owncloud        owncloud                                md5
local   all             all                                     ident

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5

# IPv6 local connections:
host    all             all             ::1/128                 md5
EOF
        su - postgres -c "mv $PGDATA.init $PGDATA"
    fi
}

function wait_for_postgresql() {
    while true; do
        if su - postgres -c "psql <<< 'select 0;' > /dev/null"; then
            break
        fi
        echo "Waiting for postgresql..."
        sleep 2
    done
}

function create_owncloud_db() {
    db_exists=0
    su - postgres -c "psql <<< '\l'" | grep owncloud || db_exists=$?

    if [ $db_exists -ne 0 ]; then
        su - postgres -c "psql <<< \"CREATE USER owncloud WITH PASSWORD '$DB_PASSWORD';\""
        su - postgres -c "psql <<< \"CREATE DATABASE owncloud OWNER owncloud;\""
    fi
}

function create_autoconfig() {
    template_path="/usr/local/share/owncloud/autoconfig.php.template"
    autoconfig_path="/var/www/html/owncloud/config/autoconfig.php"
    config_path="/var/www/html/owncloud/config/config.php"

    if [ ! -e "$config_path" -a ! -e "$autoconfig_path" ]; then
        < "$template_path" cat \
            | sed -e "s/INSERT_DB_PASSWORD/$DB_PASSWORD/" \
            | sed -e "s/INSERT_ADMIN_PASSWORD/$ADMIN_PASSWORD/" \
            > "$autoconfig_path"
        chown apache. "$autoconfig_path"
        chmod 0600 "$autoconfig_path"
    fi
}

function create_config() {
    template_path="/usr/local/share/owncloud/config.php.template"
    config_path="/var/www/html/owncloud/config/config.php"

    if [ ! -e "$config_path" ]; then
        # not using cp in case there will be customizations
        < "$template_path" cat \
            > "$config_path"
        chown apache. "$config_path"
        chmod 0600 "$config_path"
    fi
}

function install_owncloud() {
    curl http://localhost
}

function write_initrc() {
    if [ ! -e "$INITRC_PATH" ]; then
        cat > "$INITRC_PATH" <<EOF
export DB_PASSWORD=$DB_PASSWORD
export ADMIN_PASSWORD=$ADMIN_PASSWORD
EOF
        chmod 0600 "$INITRC_PATH"
    fi
}

function set_directory_permissions() {
    chown -R apache:apache /var/www/html/owncloud/config
    chmod 0750             /var/www/html/owncloud/config

    chown -R apache:apache /var/www/html/owncloud/data
    chmod 0750             /var/www/html/owncloud/data

    chown -R postgres:postgres /var/lib/pgsql
    chmod 0750                 /var/lib/pgsql
}

function random_password() {
    < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32}; true
}

main
